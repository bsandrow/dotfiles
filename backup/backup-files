#!/usr/bin/env python
"""A script for syncing files (excluding large media like videos / photo collections) on a per-host basis."""

import os
import subprocess
import sys

# Turn off buffering
sys.stdout = os.fdopen(sys.stdout.fileno(), 'w', 0)

backups = {
    'helium': [
        { 'root':'/home/bjs', 'item':'worklib'  },
        { 'root':'/home/bjs', 'item':'books'    },
        { 'root':'/home/bjs', 'item':'docslib'  },
        { 'root':'/home/bjs', 'item':'Images'   },
        { 'root':'/home/bjs', 'item':'projects' },
        { 'root':'/home/bjs', 'item':'mail'     },
    ],
}

settings = {
    'root'   : '/media/hydrogen',
    'base'   : 'backups',
    'namefmt': '%s-bjs-home',
    'logfile': None,
}

def run_command(command, **kwargs):
    print "~COMMAND~ %s" % ' '.join(command)
    subprocess.call(command, stderr=subprocess.STDOUT, **kwargs)

def mkdir(dir):
    if not os.path.exists(dir):
        os.makedirs(dir)

def rsync(source, target):
    command = [ 'rsync', '-avz', '--delete', source, target ]
    run_command(command)

def run_backups():
    backup_root = os.path.join(settings['root'], settings['base'])

    for host in backups:
        for backup in backups[host]:
            source = os.path.join(backup['root'], backup['item'])
            dest   = os.path.join(backup_root, settings['namefmt'] % host)
            print " ~INFO~ source     : %s" % source
            print " ~INFO~ destination: %s" % dest
            mkdir(dest)
            rsync(source, dest)

def main():
    run_backups()

if __name__ == '__main__':
    try:
        main()
    except KeyboardInterrupt:
        sys.exit(">> User interrupt caught. Exiting...")
