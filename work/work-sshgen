#!/bin/bash

die_with_help()
{
    if [ -n "$*" ]; then
        echo "$*" >&2
    fi
    usage >&2
    exit 1
}

die()
{
    echo "$*" >&2
    exit 1
}

usage()
{
    cat <<EOF
Usage: work-sshgen

Generates ssh configuration from \$WORKDIR/conf/ssh/config.in and updates
~/.ssh/config with it. Also copies over ssh keys from \$WORKDIR/conf/ssh/ to
~/.ssh.
EOF
}

if [ "$1" = "--help" -o "$1" = "-h" ]; then
    die_with_help
fi

if [ -z "$WORKDIR" ]; then
    die "Error: \$WORKDIR is not set!"
fi

SSH_CONF_FILE="$HOME/.ssh/config"
SSH_CONF_DIR="$(dirname $SSH_CONF_FILE)"
SRC_CONF_FILE="$WORKDIR/conf/ssh_config"
SSH_KEY_DIR="$WORKDIR/conf/ssh_keys"

WORKNAME=$(basename $WORKDIR)
START_COMMENT="### BEGIN $WORKNAME SSH CONF ###"
END_COMMENT="### END $WORKNAME SSH CONF ###"

if [ ! -f "$SRC_CONF_FILE" ]; then
    die "Error: file does not exist: $SRC_CONF_FILE"
fi

if [ ! -d "$SSH_CONF_DIR" ]; then
    echo "Warning: $SSH_CONF_DIR does not exist. Attempting to create..."
    mkdir -p  "$SSH_CONF_DIR"
    chmod 700 "$SSH_CONF_DIR"
fi

if [ -f "$SSH_CONF_FILE" ]; then
    echo "Scrubbing possible previous config settings..."
    sed -i -e "/^$START_COMMENT\$/,/^$END_COMMENT\$/d" "$SSH_CONF_FILE"
else
    echo "Creating file with correct permissions..."
    touch "$SSH_CONF_FILE"
    chmod 600 "$SSH_CONF_FILE"
fi

echo "Appending config to ~/.ssh/config..."
cat <<EOF >> "$SSH_CONF_FILE"

$START_COMMENT
$(cat "$SRC_CONF_FILE" | sed -e 's:%d/work/conf/ssh_keys:%d/.ssh:g' )
$END_COMMENT
EOF

echo "Copying ssh keys over..."
find "$SSH_KEY_DIR" -iname '*.dsa' -or -iname '*.rsa' -or -iname '*.pub' | while read keyfile; do
    cp -v "$keyfile" "$SSH_CONF_DIR/"
done
chmod 600 "$SSH_CONF_DIR"/*

# vim: set ft=sh:
